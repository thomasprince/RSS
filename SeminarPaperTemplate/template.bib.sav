% Encoding: UTF-8

@Article{1281254_McGraw,
  author   = {G. McGraw},
  title    = {Software security},
  journal  = {IEEE Security Privacy},
  year     = {2004},
  volume   = {2},
  number   = {2},
  pages    = {80-83},
  month    = {March},
  issn     = {1540-7993},
  doi      = {10.1109/MSECP.2004.1281254},
  keywords = {software reliability;computer crime;software quality;Internet;risk management;software security;malicious attack;best practices;computer security problem;software defects;security ramifications;implementation bugs;buffer overflows;design flaws;inconsistent error handling;malicious intruders;Internet-enabled software applications;security risk;security holes;Best practices;Computer security;Computer bugs;Buffer overflow;Computer errors;Computer hacking;Software systems;Internet;Application software;Fuels},
}

@Article{8017389_Ramos,
  author   = {A. Ramos and M. Lazar and R. H. Filho and J. J. P. C. Rodrigues},
  title    = {Model-Based Quantitative Network Security Metrics: A Survey},
  journal  = {IEEE Communications Surveys Tutorials},
  year     = {2017},
  volume   = {19},
  number   = {4},
  pages    = {2704-2734},
  month    = {Fourthquarter},
  issn     = {1553-877X},
  doi      = {10.1109/COMST.2017.2745505},
  keywords = {computer network security;decision making;organisational aspects;pattern classification;networked systems;model-based quantitative network security metrics;security-related decision-making process;model-based quantitative NSM;Security;Measurement;Servers;Biological system modeling;Security metrics;network security;model-based metrics;quantitative security;security level},
}

@InProceedings{Dacier1996QuantitativeAO,
  author = {Marc Dacier and Yves Deswarte and Mohamed Ka{\^a}niche},
  title  = {Quantitative Assessment of Operational Security : Models and Tools},
  year   = {1996},
}

@Article{4695835_Li,
  author   = {X. Li and P. Parker and S. Xu},
  title    = {A Stochastic Model for Quantitative Security Analyses of Networked Systems},
  journal  = {IEEE Transactions on Dependable and Secure Computing},
  year     = {2011},
  volume   = {8},
  number   = {1},
  pages    = {28-43},
  month    = {Jan},
  issn     = {1545-5971},
  doi      = {10.1109/TDSC.2008.75},
  keywords = {cryptography;stochastic processes;stochastic model;quantitative security analyses;networked systems;security analysis;cryptographic primitives;security mechanisms;intrusion detection systems;vulnerability graph;steady-state number;Stochastic systems;Cryptography;Cryptographic protocols;Computer science;Computer networks;Intrusion detection;Network topology;Steady-state;Analytical models;Authentication;Security modeling;quantitative security analysis;vulnerability graph;networked systems;security metric.;Security modeling;quantitative security analysis},
}

@Article{1335467_Nicol,
  author   = {D. M. Nicol and W. H. Sanders and K. S. Trivedi},
  title    = {Model-based evaluation: from dependability to security},
  journal  = {IEEE Transactions on Dependable and Secure Computing},
  year     = {2004},
  volume   = {1},
  number   = {1},
  pages    = {48-65},
  month    = {Jan},
  issn     = {1545-5971},
  doi      = {10.1109/TDSC.2004.11},
  keywords = {security of data;Markov processes;fault tolerant computing;software reliability;model-based evaluation;Markov reward models;discrete-event simulation;system dependability;system security;dependability evaluation;security evaluation;performability evaluation;stochastic modeling;Computer security;Stochastic systems;Stochastic processes;History;Discrete event simulation;Humans;Performance evaluation;Protocols;Sensitivity analysis;Index Terms- Dependability evaluation;security evaluation;performability evaluation;stochastic modeling.},
}

@InProceedings{Wang:2009:SMS:1566445.1566509,
  author    = {Wang, Ju An and Wang, Hao and Guo, Minzhe and Xia, Min},
  title     = {Security Metrics for Software Systems},
  booktitle = {Proceedings of the 47th Annual Southeast Regional Conference},
  year      = {2009},
  series    = {ACM-SE 47},
  pages     = {47:1--47:6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1566509},
  articleno = {47},
  doi       = {10.1145/1566445.1566509},
  isbn      = {978-1-60558-421-8},
  keywords  = {security metrics, software quality, software security, software vulnerabilities},
  location  = {Clemson, South Carolina},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/1566445.1566509},
}

@Article{HALKIDIS2006379,
  author   = {Spyros T. Halkidis and Alexander Chatzigeorgiou and George Stephanides},
  title    = {A qualitative analysis of software security patterns},
  journal  = {Computers \& Security},
  year     = {2006},
  volume   = {25},
  number   = {5},
  pages    = {379 - 392},
  issn     = {0167-4048},
  abstract = {Software security, which has attracted the interest of the industrial and research community during the last years, aims at preventing security problems by building software without the so-called security holes. One way to achieve this goal is to apply specific patterns in software architecture. In the same way that the well-known design patterns for building well-structured software have been defined, a new kind of patterns called security patterns have emerged. These patterns enable us to incorporate a level of security already at the design phase of a software system. There exists no strict set of rules that can be followed in order to develop secure software. However, a number of guidelines have already appeared in the literature. Furthermore, the key problems in building secure software and major threat categories for a software system have been identified. An attempt to evaluate known security patterns based on how well they follow each principle, how well they encounter with possible problems in building secure software and for which of the threat categories they do take care of, is performed in this paper. Thirteen security patterns were evaluated based on these three sets of criteria. The ability of some of these patterns to enhance the security of the design of a software system is also examined by an illustrative example of fortifying a published design.},
  doi      = {https://doi.org/10.1016/j.cose.2006.03.002},
  keywords = {Security patterns, Software security, Design patterns, Security architecture, Software architecture},
  url      = {http://www.sciencedirect.com/science/article/pii/S0167404806000526},
}

@Book{Howard:2002:WSC:579079,
  title     = {Writing Secure Code},
  publisher = {Microsoft Press},
  year      = {2002},
  author    = {Howard, Michael and Leblanc, David E.},
  address   = {Redmond, WA, USA},
  edition   = {2nd},
  isbn      = {0735617228},
}

@Book{GaryMcGraw2002,
  title     = {Building Secure Software: How to Avoid Security Problems the Right Way},
  publisher = {Addison-Wesley Professional},
  year      = {2002},
  author    = {Gary McGraw, John Viega},
}

@Article{GOEL2015710,
  author   = {Jai Narayan Goel and B.M. Mehtre},
  title    = {Vulnerability Assessment \& Penetration Testing as a Cyber Defence Technology},
  journal  = {Procedia Computer Science},
  year     = {2015},
  volume   = {57},
  pages    = {710 - 715},
  issn     = {1877-0509},
  note     = {3rd International Conference on Recent Trends in Computing 2015 (ICRTC-2015)},
  abstract = {Complexity of systems are increasing day by day. This leads to more and more vulnerabilities in Systems. Attackers use these vulnerabilities to exploit the victim's system. It is better to find out these vulnerabilities in advance before attacker do. The power of Vulnerability assessment is usually underestimated. While Vulnerability Assessment and Penetration Testing can be used as a cyber-defence technology to provide proactive cyber defence. In this paper we proved Vulnerability Assessment and Penetration Testing (VAPT) as a Cyber defence technology, how we can provide active cyber defence using Vulnerability Assessment and Penetration Testing. We described complete life cycle of Vulnerability Assessment and Penetration Testing on systems or networks and proactive action taken to resolve that vulnerability and stop possible attack. In this paper we have described prevalent Vulnerability assessment techniques and some famous premium/open source VAPT tools. We have described complete process of how to use Vulnerability Assessment and Penetration Testing as a powerful Cyber Defence Technology.},
  doi      = {https://doi.org/10.1016/j.procs.2015.07.458},
  keywords = {Vulnerability Assessment, Penetration Testing, VAPT Tools, Cyberdefence, System Security, Cyberdefence Technology ;},
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050915019870},
}

@Article{6629992_Fronseca,
  author   = {J. Fonseca and M. Vieira and H. Madeira},
  title    = {Evaluation of Web Security Mechanisms Using Vulnerability amp; Attack Injection},
  journal  = {IEEE Transactions on Dependable and Secure Computing},
  year     = {2014},
  volume   = {11},
  number   = {5},
  pages    = {440-453},
  month    = {Sept},
  issn     = {1545-5971},
  doi      = {10.1109/TDSC.2013.45},
  keywords = {fault diagnosis;Internet;security of data;software fault tolerance;SQL;Web application security mechanism evaluation;vulnerability injection methodology;attack injection methodology;VAIT;vulnerability-&-attack injector tool;intrusion detection system;SQL Injection attacks;fault injection;Security;Databases;Input variables;TV;Software;Probes;Educational institutions;Security;fault injection;internet applications;review and evaluation},
}

@InProceedings{CynthiaPhillips1998,
  author    = {Cynthia Phillips, Laura Painton Swiler},
  title     = {A Graph-Based System for Network-Vulnerability Analysis},
  booktitle = {Workshop New Security Paradigms (NSPW)},
  year      = {1998},
  pages     = {71-79},
  address   = {Charlottesville, Virginia, USA},
  doi       = {10.1145/310889.310919},
}

@InProceedings{J.Pamula2006,
  author    = {J. Pamula, S. Jajodia, P. Ammann, and V. Swarup},
  title     = {A weakestadversary security metric for network configuration security analysis},
  booktitle = {2nd ACM Workshop Qual. Protect. (QoP)},
  year      = {2006},
  pages     = {31-38},
  address   = {Alexandria, VA, USA},
}

@Comment{jabref-meta: databaseType:bibtex;}
